{
    "MAX_LIVES": 10,
    "MAX_QUESTIONS": 10,
    "winMessage": "You win!",
    "lossMessage": "You lose! Please try again.",
    "database": [
        {
            "name": "median",
            "count": 1,
            "numFunc": 6,
            "futile": 5,
            "in": [
                "num_array"
            ],
            "out": "number",
            "question": "Given an array of three numbers \"list\", return its median.",
            "code": "function median(list){\n\tcopy=[...list];\n\tcopy.sort();\n\treturn copy[1];\n}",
            "customValidate": true,
            "valFunc": {
                "arguments": [
                    "list"
                ],
                "body": "if(list.length === 3){\n return true;\n}\n return false;"
            },
            "correct": {
                "arguments": [
                    "list"
                ],
                "body": "copy=[...list];\ncopy.sort((a,b) => a-b);\nreturn copy[1];"
            },
            "incorrect": [
                {
                    "heart": false,
                    "arguments": [
                        "list"
                    ],
                    "body": "return list[1];"
                },
                {
                    "heart": false,
                    "arguments": [
                        "list"
                    ],
                    "body": "var min = list[0];\nvar max = list[0];\nfor (var i = 1; i < list.length; i++) {if (list[i] < min) {\nmin = list[i];\n}\nif (list[i] > max) {\nmax = list[i];\n}\n}\nreturn max;"
                },
                {
                    "heart": true,
                    "arguments": [
                        "list"
                    ],
                    "body": "var max = Math.max.apply(null, list);\nreturn list.filter(function(x) { return x < max; })[0];"
                },
                {
                    "heart": false,
                    "arguments": [
                        "list"
                    ],
                    "body": "list.sort();\nvar median = (list[0] + list[2])/2;\nreturn median;"
                },
                {
                    "heart": false,
                    "arguments": [
                        "list"
                    ],
                    "body": "list.sort();\nif(list[1]==(list[0]+list[2])/2){\nreturn list[1];\n}\nelse{\nreturn list[0];\n}"
                },
                {
                    "heart": false,
                    "arguments": [
                        "list"
                    ],
                    "body": "return list[2];"
                }
            ]
        }
    ]
}
